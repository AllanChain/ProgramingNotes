{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Table of Contents python \u65e0\u6cd5\u8fd0\u884c\u4e00\u4e9b\u8001\u65e7\u7a0b\u5e8f \u5728ftp\u6587\u4ef6\u5939\u89c6\u56fe\u4e0b\u5b9e\u73b0\u53cc\u51fb\u6253\u5f00\u6587\u4ef6 Requests\u521d\u63a2 \u8ba9Termux\u5bf9\u6d4f\u89c8\u5668\u66f4\u53cb\u597d Package Notes Pip&Pypi Python the Language Read the Character Straight Module readline termux Error Handling Initialize vim Airline Setup Annoying Tab width AirlineImg kivy Using Kivy and Buildozer to Build Android APK git Split a Repo Push without Password Add SSH Key","title":"Table of Contents"},{"location":"#table-of-contents","text":"python \u65e0\u6cd5\u8fd0\u884c\u4e00\u4e9b\u8001\u65e7\u7a0b\u5e8f \u5728ftp\u6587\u4ef6\u5939\u89c6\u56fe\u4e0b\u5b9e\u73b0\u53cc\u51fb\u6253\u5f00\u6587\u4ef6 Requests\u521d\u63a2 \u8ba9Termux\u5bf9\u6d4f\u89c8\u5668\u66f4\u53cb\u597d Package Notes Pip&Pypi Python the Language Read the Character Straight Module readline termux Error Handling Initialize vim Airline Setup Annoying Tab width AirlineImg kivy Using Kivy and Buildozer to Build Android APK git Split a Repo Push without Password Add SSH Key","title":"Table of Contents"},{"location":"git/SplitRepo/","text":"Split a Repo Single File From https://stackoverflow.com/questions/39479154/how-can-i-split-a-single-file-from-a-git-repo-into-a-new-repo Use git fast-export. First you export the history of the file to a fast-import stream. Make sure you do this on the master branch. cd oldrepo git fast-export HEAD -- MyFile.ext >../myfile.fi Then you create a new repo and import. cd .. mkdir newrepo cd newrepo git init git fast-import <../myfile.fi git checkout Sub Directory git filter-branch -f --prune-empty --subdirectory-filter path/to/module","title":"Split a Repo"},{"location":"git/SplitRepo/#split-a-repo","text":"","title":"Split a Repo"},{"location":"git/SplitRepo/#single-file","text":"From https://stackoverflow.com/questions/39479154/how-can-i-split-a-single-file-from-a-git-repo-into-a-new-repo Use git fast-export. First you export the history of the file to a fast-import stream. Make sure you do this on the master branch. cd oldrepo git fast-export HEAD -- MyFile.ext >../myfile.fi Then you create a new repo and import. cd .. mkdir newrepo cd newrepo git init git fast-import <../myfile.fi git checkout","title":"Single File"},{"location":"git/SplitRepo/#sub-directory","text":"git filter-branch -f --prune-empty --subdirectory-filter path/to/module","title":"Sub Directory"},{"location":"git/gpg/","text":"Damning GPG Key I tried to use GPG key months ago, and after a desperate search, I finally knew that I didn't read the doc carefully and forgot to tell git what gpg key to use. And I happily reproduce the same on my Ubuntu virtual machine. That's when interesting mystery took place. GitHub said that the commits by my windows machine was unverified but the ones by Ubuntu IS verified. WTH? That's IMPOSSIBLE! I even copied the private keys to windows machine and without luck. Finally, I found out that the email setting was different between two machines and GitHub need the local email MUST equals the email/comment of GPG key. Alright. And today, when I have succeeded in signing many commits in different repos, I failed to sign this repo... That's IMPOSSIBLE ENOUGH! Fortunately, a command saved me: git config -l And I saw two user.signingkey there... Interesting ... One is global and one is local, the local one is introduced in the early age when I configure the GPG key generated by windows locally and forgot to remove it... Okey, I swear that there shall be NO DAMNING TROUBLE in GPG later on!","title":"Damning GPG Key"},{"location":"git/gpg/#damning-gpg-key","text":"I tried to use GPG key months ago, and after a desperate search, I finally knew that I didn't read the doc carefully and forgot to tell git what gpg key to use. And I happily reproduce the same on my Ubuntu virtual machine. That's when interesting mystery took place. GitHub said that the commits by my windows machine was unverified but the ones by Ubuntu IS verified. WTH? That's IMPOSSIBLE! I even copied the private keys to windows machine and without luck. Finally, I found out that the email setting was different between two machines and GitHub need the local email MUST equals the email/comment of GPG key. Alright. And today, when I have succeeded in signing many commits in different repos, I failed to sign this repo... That's IMPOSSIBLE ENOUGH! Fortunately, a command saved me: git config -l And I saw two user.signingkey there... Interesting ... One is global and one is local, the local one is introduced in the early age when I configure the GPG key generated by windows locally and forgot to remove it... Okey, I swear that there shall be NO DAMNING TROUBLE in GPG later on!","title":"Damning GPG Key"},{"location":"git/password/","text":"Push without Password on Linux Just echo https://{username}:{password}@github.com > ~/.git-credentials git config --global credential.helper store And you will see [credential]helper = store in .gitconfig on Windows Just install Git-Credential-Manager-for-Windows or GCMW for short","title":"Push without Password"},{"location":"git/password/#push-without-password","text":"","title":"Push without Password"},{"location":"git/password/#on-linux","text":"Just echo https://{username}:{password}@github.com > ~/.git-credentials git config --global credential.helper store And you will see [credential]helper = store in .gitconfig","title":"on Linux"},{"location":"git/password/#on-windows","text":"Just install Git-Credential-Manager-for-Windows or GCMW for short","title":"on Windows"},{"location":"git/ssh/","text":"Add SSH Key Visit GitHub Help Page for detial. Add SSH Keys Open Terminal. Paste the text below, substituting in your GitHub email address. ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" This creates a new ssh key, using the provided email as a label. Generating public/private rsa key pair. When you're prompted to \"Enter a file in which to save the key,\" press Enter. This accepts the default file location. Enter a file in which to save the key (/home/you/.ssh/id_rsa): [Press enter] At the prompt, type a secure passphrase. For more information, see \"Working with SSH key passphrases\". Enter passphrase (empty for no passphrase): [Type a passphrase] Enter same passphrase again: [Type passphrase again]","title":"Add SSH Key"},{"location":"git/ssh/#add-ssh-key","text":"Visit GitHub Help Page for detial.","title":"Add SSH Key"},{"location":"git/ssh/#add-ssh-keys","text":"Open Terminal. Paste the text below, substituting in your GitHub email address. ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" This creates a new ssh key, using the provided email as a label. Generating public/private rsa key pair. When you're prompted to \"Enter a file in which to save the key,\" press Enter. This accepts the default file location. Enter a file in which to save the key (/home/you/.ssh/id_rsa): [Press enter] At the prompt, type a secure passphrase. For more information, see \"Working with SSH key passphrases\". Enter passphrase (empty for no passphrase): [Type a passphrase] Enter same passphrase again: [Type passphrase again]","title":"Add SSH Keys"},{"location":"kivy/Buildozer/","text":"Using Kivy and Buildozer to Build Android APK Environment: Ubuntu 19.04 Disco Dingo Python 3.7.3 kivy 1.10.1 buildozer 0.39 My First Android Application Ever Built Buildozer Install pip3 install buildozer Get Kivy program Using https://github.com/kivy/kivy/tree/master/examples/demo/pictures Configure Buildozer buildozer init vim buildozer.spec Prepare to build As advised on Buildozer Doc , Android on Ubuntu 18.04 (64bit) should install: sudo pip install --upgrade cython==0.28.6 sudo dpkg --add-architecture i386 sudo apt update sudo apt install build-essential ccache git libncurses5:i386 libstdc++6:i386 libgtk2.0-0:i386 libpangox-1.0-0:i386 libpangoxft-1.0-0:i386 buildozer -v android debug This will download Android SDK, NDK, and others tools, taking your ~/.buildozer about 3.9GB space and ./.buildozer about 1.3 GB, if you have only python3 and pip3 installed. It may crash though, please make sure there is no [WARNING] telling you to install packages , and Google often. If it says that there is no file called xyz.so, you can try: locate xyz.so ln -s path/to/exist/so /usr/lib/xyz.so If you are inside some kind of great firewall, try in morning will speed the downloading process up. Install and Test Finally, you will find a apk file inside ./bin directory. You sure can upload it to a cloud and download it to your android device as I previously did, but I strongly recommend you to enable USB debug mode on your android phone and connect to your PC / laptop. And run: buildozer android deploy Then the android apk will be transmitted to your android device and install. Then run: buildozer android run logcat 2>&1 >/dev/null | grep 'python' > filter.out Note: an android device can only connect to a virtual machine or the PC at one time, configure it carefully buildozer writes adb logcat info to STDERR, so use 2>&1 to redirect it to STDOUT use grep to get all info related to python, since logcat has too much info to read logcat won't stop automatically, so kill it when your app fiinishes finally, write all to a file to be easily read. About Kivy Version I ran buildozer to build an example apk before installing kivy via pip, so my next app crashed because of requirement error. So I have to install the specific version of kivy.","title":"Using Kivy and Buildozer to Build Android APK"},{"location":"kivy/Buildozer/#using-kivy-and-buildozer-to-build-android-apk","text":"Environment: Ubuntu 19.04 Disco Dingo Python 3.7.3 kivy 1.10.1 buildozer 0.39","title":"Using Kivy and Buildozer to Build Android APK"},{"location":"kivy/Buildozer/#my-first-android-application-ever-built","text":"","title":"My First Android Application Ever Built"},{"location":"kivy/Buildozer/#buildozer-install","text":"pip3 install buildozer","title":"Buildozer Install"},{"location":"kivy/Buildozer/#get-kivy-program","text":"Using https://github.com/kivy/kivy/tree/master/examples/demo/pictures","title":"Get Kivy program"},{"location":"kivy/Buildozer/#configure-buildozer","text":"buildozer init vim buildozer.spec","title":"Configure Buildozer"},{"location":"kivy/Buildozer/#prepare-to-build","text":"As advised on Buildozer Doc , Android on Ubuntu 18.04 (64bit) should install: sudo pip install --upgrade cython==0.28.6 sudo dpkg --add-architecture i386 sudo apt update sudo apt install build-essential ccache git libncurses5:i386 libstdc++6:i386 libgtk2.0-0:i386 libpangox-1.0-0:i386 libpangoxft-1.0-0:i386 buildozer -v android debug This will download Android SDK, NDK, and others tools, taking your ~/.buildozer about 3.9GB space and ./.buildozer about 1.3 GB, if you have only python3 and pip3 installed. It may crash though, please make sure there is no [WARNING] telling you to install packages , and Google often. If it says that there is no file called xyz.so, you can try: locate xyz.so ln -s path/to/exist/so /usr/lib/xyz.so If you are inside some kind of great firewall, try in morning will speed the downloading process up.","title":"Prepare to build"},{"location":"kivy/Buildozer/#install-and-test","text":"Finally, you will find a apk file inside ./bin directory. You sure can upload it to a cloud and download it to your android device as I previously did, but I strongly recommend you to enable USB debug mode on your android phone and connect to your PC / laptop. And run: buildozer android deploy Then the android apk will be transmitted to your android device and install. Then run: buildozer android run logcat 2>&1 >/dev/null | grep 'python' > filter.out Note: an android device can only connect to a virtual machine or the PC at one time, configure it carefully buildozer writes adb logcat info to STDERR, so use 2>&1 to redirect it to STDOUT use grep to get all info related to python, since logcat has too much info to read logcat won't stop automatically, so kill it when your app fiinishes finally, write all to a file to be easily read.","title":"Install and Test"},{"location":"kivy/Buildozer/#about-kivy-version","text":"I ran buildozer to build an example apk before installing kivy via pip, so my next app crashed because of requirement error. So I have to install the specific version of kivy.","title":"About Kivy Version"},{"location":"python/DailySnippets/","text":"\u65e0\u6cd5\u8fd0\u884c\u4e00\u4e9b\u8001\u65e7\u7a0b\u5e8f \u65b9\u6848\uff1a\u53f3\u952e>\u5c5e\u6027>\u4ee5\u517c\u5bb9\u6a21\u5f0f\u8fd0\u884c \u4f18\u9177.kux\u8f6c.mp4 \u4f18\u9177\u5b89\u88c5\u6587\u4ef6\u5939\u5185\u6709ffmpeg.exe\uff0c\u6309\u7167ffmpeg\u7528\u6cd5\u91cd\u65b0\u5c01\u88c5\u6210mp4\u5373\u53ef\u3002 \u9644\uff1a\u4f18\u9177\u4e0d\u7ed9\u529b\u7684\u63a2\u7d22\u8fc7\u7a0b \u6740\u6389Youku Desktop\u91cd\u65b0\u542f\u52a8\u4f18\u9177 \u6ce8\u9500\u540e\u91cd\u65b0\u542f\u52a8\u4f18\u9177 \u5728\u706b\u7ed2\u4e2d\u6062\u590d\u4f18\u9177\u81ea\u542f\u52a8 \u6253\u5f00\u5b89\u88c5\u5305\uff0c\u5e76\u6ca1\u6709\u4fee\u590d\u529f\u80fd \u91cd\u88c5\u4f18\u9177 \u5728\u4f18\u9177\u5b89\u88c5\u6587\u4ef6\u5939\u4e2d\u6f2b\u6b65\uff0c\u627e\u5230NPlayer.exe\uff0c\u53cc\u51fb\u6253\u4e0d\u5f00\uff0c\u5c06.kux\u89c6\u9891\u62d6\u5728\u5176\u4e0a\uff0c\u6253\u5f00\u6210\u529f \u4e3a.kux\u6587\u4ef6\u6ce8\u518c\u6253\u5f00\u65b9\u5f0f \u5199 KuxConverter.py \uff0c\u63a5\u6536\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u8c03\u7528 ffmpeg \u8f6c\u6210mp4\uff0c\u7136\u540e\u7528\u9ed8\u8ba4\u5e94\u7528\uff08 PotPlayer \uff09\u6253\u5f00\u3002 \u5728\u6ce8\u518c\u8868 HKEY_CLASSES_ROOT \u4e2d PyKux DefaultIcon shell open command .kux \u5176\u4e2d PyKux \u9879\u4eff\u7167 Python.File \u586b\u5199\uff0c .kux \u9879\u4eff\u7167 .mp4 \u586b\u5199 FFMpeg \u4e0b\u8f7d m3u8 \u65b9\u4fbf\u5feb\u6377\uff0c\u4e00\u884c\u5230\u4f4d\uff01 ffmpeg -i \"https://zuikzy.603ee.com/2019/05/01/irlmX9Oasv3yhzR4/playlist.m3u8\" example.mp4 \u534e\u4e3a\u624b\u673a\u52a9\u624b\u7ed9\u624b\u673a\u505a\u5168\u76d8\u5907\u4efd\u6162\u89e3\u51b3 \u534e\u4e3a\u624b\u673a\u52a9\u624b\u5b98\u7f51\u4e0b\u8f7d\u5730\u5740\u4e3a\uff1a https://consumer.huawei.com/cn/support/hisuite/ \u4ee5\u8fd9\u4e2a\u4e3a\u51c6\u3002\u5b89\u88c5\u5b8c\u540e\u53ef\u80fd\u4f1a\u63d0\u793a\u66f4\u65b0\uff0c\u5982\u9047\u5230\u53ef\u4e0d\u7406\u3002\u6211\u4f7f\u75289.0.3.300\u6d4b\u8bd5\u6210\u529f\u3002 \u5907\u4efd\u8fc7\u7a0b\u4e2d\u5982\u9047\u523098%\u5361\u6b7b\u7684\u60c5\u51b5\uff0c\u53ef\u8003\u8651\u53d6\u6d88\u5907\u4efd\u3002\u7136\u540e\u5c06\u624b\u673a\u4e0a\u7684\u201c\u5907\u4efd\u201d\u7a0b\u5e8f\u5378\u8f7d\u6389\uff0c\u7136\u540e\u91cd\u65b0\u8fde\u63a5\u7535\u8111\u7aef\u624b\u673a\u52a9\u624b\uff0c\u7531\u7535\u8111\u7aef\u624b\u673a\u52a9\u624b\u81ea\u52a8\u5b89\u88c5\u3002\u5982\u6309\u524d\u8ff0\u64cd\u4f5c\uff0c\u5219\u53ef\u89e3\u51b3\u5907\u4efd\u7f13\u6162\u6216\u8005\u662f\u5361\u4f4f\u73b0\u8c61\u3002 \u5728\u91cd\u88c5\u624b\u673a\u52a9\u624b\u540e\uff0c\u5efa\u8bae\u628a\u624b\u673a\u8fde\u63a5\u7535\u8111\u7684\u76f8\u5173\u8bb0\u5f55\u53d6\u6d88\uff0c\u5e76\u4e14\u91cd\u65b0\u6253\u5f00\u76f8\u5173\u5f00\u5173\u3002","title":"DailySnippets"},{"location":"python/DailySnippets/#_1","text":"\u65b9\u6848\uff1a\u53f3\u952e>\u5c5e\u6027>\u4ee5\u517c\u5bb9\u6a21\u5f0f\u8fd0\u884c","title":"\u65e0\u6cd5\u8fd0\u884c\u4e00\u4e9b\u8001\u65e7\u7a0b\u5e8f"},{"location":"python/DailySnippets/#kuxmp4","text":"\u4f18\u9177\u5b89\u88c5\u6587\u4ef6\u5939\u5185\u6709ffmpeg.exe\uff0c\u6309\u7167ffmpeg\u7528\u6cd5\u91cd\u65b0\u5c01\u88c5\u6210mp4\u5373\u53ef\u3002 \u9644\uff1a\u4f18\u9177\u4e0d\u7ed9\u529b\u7684\u63a2\u7d22\u8fc7\u7a0b \u6740\u6389Youku Desktop\u91cd\u65b0\u542f\u52a8\u4f18\u9177 \u6ce8\u9500\u540e\u91cd\u65b0\u542f\u52a8\u4f18\u9177 \u5728\u706b\u7ed2\u4e2d\u6062\u590d\u4f18\u9177\u81ea\u542f\u52a8 \u6253\u5f00\u5b89\u88c5\u5305\uff0c\u5e76\u6ca1\u6709\u4fee\u590d\u529f\u80fd \u91cd\u88c5\u4f18\u9177 \u5728\u4f18\u9177\u5b89\u88c5\u6587\u4ef6\u5939\u4e2d\u6f2b\u6b65\uff0c\u627e\u5230NPlayer.exe\uff0c\u53cc\u51fb\u6253\u4e0d\u5f00\uff0c\u5c06.kux\u89c6\u9891\u62d6\u5728\u5176\u4e0a\uff0c\u6253\u5f00\u6210\u529f","title":"\u4f18\u9177.kux\u8f6c.mp4"},{"location":"python/DailySnippets/#kux","text":"\u5199 KuxConverter.py \uff0c\u63a5\u6536\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u8c03\u7528 ffmpeg \u8f6c\u6210mp4\uff0c\u7136\u540e\u7528\u9ed8\u8ba4\u5e94\u7528\uff08 PotPlayer \uff09\u6253\u5f00\u3002 \u5728\u6ce8\u518c\u8868 HKEY_CLASSES_ROOT \u4e2d PyKux DefaultIcon shell open command .kux \u5176\u4e2d PyKux \u9879\u4eff\u7167 Python.File \u586b\u5199\uff0c .kux \u9879\u4eff\u7167 .mp4 \u586b\u5199","title":"\u4e3a.kux\u6587\u4ef6\u6ce8\u518c\u6253\u5f00\u65b9\u5f0f"},{"location":"python/DailySnippets/#ffmpeg-m3u8","text":"\u65b9\u4fbf\u5feb\u6377\uff0c\u4e00\u884c\u5230\u4f4d\uff01 ffmpeg -i \"https://zuikzy.603ee.com/2019/05/01/irlmX9Oasv3yhzR4/playlist.m3u8\" example.mp4","title":"FFMpeg \u4e0b\u8f7d m3u8"},{"location":"python/DailySnippets/#_2","text":"\u534e\u4e3a\u624b\u673a\u52a9\u624b\u5b98\u7f51\u4e0b\u8f7d\u5730\u5740\u4e3a\uff1a https://consumer.huawei.com/cn/support/hisuite/ \u4ee5\u8fd9\u4e2a\u4e3a\u51c6\u3002\u5b89\u88c5\u5b8c\u540e\u53ef\u80fd\u4f1a\u63d0\u793a\u66f4\u65b0\uff0c\u5982\u9047\u5230\u53ef\u4e0d\u7406\u3002\u6211\u4f7f\u75289.0.3.300\u6d4b\u8bd5\u6210\u529f\u3002 \u5907\u4efd\u8fc7\u7a0b\u4e2d\u5982\u9047\u523098%\u5361\u6b7b\u7684\u60c5\u51b5\uff0c\u53ef\u8003\u8651\u53d6\u6d88\u5907\u4efd\u3002\u7136\u540e\u5c06\u624b\u673a\u4e0a\u7684\u201c\u5907\u4efd\u201d\u7a0b\u5e8f\u5378\u8f7d\u6389\uff0c\u7136\u540e\u91cd\u65b0\u8fde\u63a5\u7535\u8111\u7aef\u624b\u673a\u52a9\u624b\uff0c\u7531\u7535\u8111\u7aef\u624b\u673a\u52a9\u624b\u81ea\u52a8\u5b89\u88c5\u3002\u5982\u6309\u524d\u8ff0\u64cd\u4f5c\uff0c\u5219\u53ef\u89e3\u51b3\u5907\u4efd\u7f13\u6162\u6216\u8005\u662f\u5361\u4f4f\u73b0\u8c61\u3002 \u5728\u91cd\u88c5\u624b\u673a\u52a9\u624b\u540e\uff0c\u5efa\u8bae\u628a\u624b\u673a\u8fde\u63a5\u7535\u8111\u7684\u76f8\u5173\u8bb0\u5f55\u53d6\u6d88\uff0c\u5e76\u4e14\u91cd\u65b0\u6253\u5f00\u76f8\u5173\u5f00\u5173\u3002","title":"\u534e\u4e3a\u624b\u673a\u52a9\u624b\u7ed9\u624b\u673a\u505a\u5168\u76d8\u5907\u4efd\u6162\u89e3\u51b3"},{"location":"python/FTPFileDbClickOpen/","text":"\u5728ftp\u6587\u4ef6\u5939\u89c6\u56fe\u4e0b\u5b9e\u73b0\u53cc\u51fb\u6253\u5f00\u6587\u4ef6 \u80cc\u666f \u5728\u65e5\u5e38\u5b66\u4e60\u751f\u6d3b\u4e2d\uff0cftp\u6587\u4ef6\u7684\u64cd\u4f5c\u9700\u8981\u62d6\u653e\u6765\u5b9e\u73b0\uff0c\u4e8e\u662f\u4ea7\u751f\u4ee5\u4e0b\u95ee\u9898\uff1a \u62d6\u66f3\u64cd\u4f5c\u5bf9\u89e6\u6478\u5c4f\u5e76\u4e0d\u53cb\u597d\uff0c\u5e38\u9700\u8981\u901a\u8fc7\u957f\u6309\u540e\u8fbe\u5230\u53f3\u952e\u7684\u6548\u679c\u518d\u62d6\u653e\u3002 \u51e0\u5929\u4ee5\u540e\uff0c\u4f1a\u51fa\u73b0\u6ee1\u684c\u9762\u7684\u6587\u4ef6\uff0c\u6574\u7406\u5de5\u4f5c\u91cf\u5927\u3002 \u89e3\u51b3\u65b9\u6848\u63a2\u7d22 \u8bc4\u6790\u6d4f\u89c8\u5668\u4e0b\u8f7d\u63d2\u4ef6\u7684\u53ef\u884c\u6027 \u7f3a\u70b9\uff1a \u96be\u4ee5\u81ea\u5b9a\u4e49\u4e0b\u8f7d\u4f4d\u7f6e\uff0c\u4e5f\u662f\u4e00\u80a1\u8111\u653e\u5728\u4e00\u4e2a\u5730\u65b9 \u80af\u5b9a\u4f1a\u5f39\u51fa\u6d4f\u89c8\u5668\u7a97\u53e3\uff0c\u5c31\u7b97\u4e0d\u7ba1\u5f39\u51fa\u7a97\u53e3\u7684\u7f8e\u89c2\u6027\uff0c\u5982\u679c\u6d4f\u89c8\u5668\u6253\u5f00\u4e86\u4ec0\u4e48\u3002\u3002\u3002 \u7ed3\u8bba\uff1a\u653e\u5f03\u6b64\u65b9\u6848 \u8bc4\u6790\u5c06\u81ea\u5b9a\u4e49\u7a0b\u5e8f\u6ce8\u518c\u4e3aftp\u6253\u5f00\u65b9\u5f0f\u7684\u53ef\u884c\u6027 \u4f18\u70b9\uff1a \u6709\u4e13\u95e8\u8d1f\u8d23ftp\u53cc\u51fb\u6253\u5f00\u540e\u6253\u5f00\u7a0b\u5e8f\u7684\u6ce8\u518c\u8868\u9879\uff0c\u6b64\u5904\u539f\u6765\u6ce8\u518c\u7684\u662fChrome \u7684\u786e\u53ef\u4ee5\u6ce8\u518c\uff0c\u8c03\u7528python\u65e0\u7a97\u53e3\u7a0b\u5e8f\u987a\u5229 \u4e0d\u8db3\uff1a \u4f20\u7ed9\u7a0b\u5e8f\u7684\u662f\u4e34\u65f6\u6587\u4ef6\u5730\u5740\uff0c\u4e0d\u77e5\u9053ftp\u7528\u6237 \u5fc5\u987b\u7cfb\u7edf\u4e0b\u8f7d\u597d\u4e34\u65f6\u6587\u4ef6\u624d\u4f1a\u8c03\u7528\u6ce8\u518c\u7684\u7a0b\u5e8f \u7cfb\u7edf\u5df2\u7ecf\u4e0b\u8f7d\u8fc7\u7684\u6587\u4ef6\u518d\u6b21\u53cc\u51fb\u53c8\u4f1a\u4e0b\u8f7d\u4e00\u904d\uff0c\u8d39\u65f6\u8d39\u529b \u4e34\u65f6\u6587\u4ef6\u76ee\u5f55\u4e0d\u4f1a\u81ea\u52a8\u6e05\u7a7a \u8865\u5145\uff1a \u5b58\u5728\u4e24\u4e2a\u5730\u65b9\u6ce8\u518cftp\u6d4f\u89c8\u5668\uff1a HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\Shell\\Associations\\UrlAssociations\\ftp\\UserChoice HKEY_CLASS_ROOT\\ftp \u5728\u67d0\u4e9b\u7535\u8111\u4e0a\uff08\u5982Win7 64bit\uff09\u4f7f\u7528\u65b9\u6cd5\u4e00\u6ce8\u518c\u65f6\uff0c\u4f1a\u4e0b\u8f7d\u4e34\u65f6\u6587\u4ef6\uff1b\u4f7f\u7528\u65b9\u6cd5\u4e8c\u65f6\uff0c\u53ea\u4f1a\u521b\u5efa\u4e34\u65f6\u6587\u4ef6 \u4f46\u5728\u53e6\u4e00\u4e9b\u7535\u8111\uff08\u5982Win7 32bit\uff09\uff0c\u4e0d\u8bba\u4f7f\u7528\u90a3\u79cd\u65b9\u6cd5\uff0c\u5747\u4f1a\u4e0b\u8f7d \u89e3\u6551\u65b9\u6848\uff1a \u4f7f\u7528windows api\u83b7\u53d6\u6700\u4e0a\u5c42\u6587\u4ef6\u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f \u6ce8\uff1a\u6709\u7684\uff08Win7 Professional\uff09\u5730\u5740\u680f\u4e2d\u5305\u542b\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6709\u7684\uff08Win7 Ultimate\uff09\u53ea\u6709\u7528\u6237\u540d \u518d\u542f\u7528python ftplib\u5b9e\u73b0\u6587\u4ef6\u5bf9\u6bd4\u548c\u4e0b\u8f7d \u601d\u8003Shell Extension Shell Extension\u6709\u5c5e\u6027\u680f\u3001\u60ac\u505c\u7b49\uff0c\u4f46\u4e0d\u9002\u5408 \u5176\u4ed6\u5e94\u7528\uff0c\u653e\u5f03Explorer \u6682\u65f6\u627e\u4e0d\u5230 SMB, Not FTP \u4f60\u53bb\u534f\u5546\u5440\uff01","title":"\u5728ftp\u6587\u4ef6\u5939\u89c6\u56fe\u4e0b\u5b9e\u73b0\u53cc\u51fb\u6253\u5f00\u6587\u4ef6"},{"location":"python/FTPFileDbClickOpen/#ftp","text":"","title":"\u5728ftp\u6587\u4ef6\u5939\u89c6\u56fe\u4e0b\u5b9e\u73b0\u53cc\u51fb\u6253\u5f00\u6587\u4ef6"},{"location":"python/FTPFileDbClickOpen/#_1","text":"\u5728\u65e5\u5e38\u5b66\u4e60\u751f\u6d3b\u4e2d\uff0cftp\u6587\u4ef6\u7684\u64cd\u4f5c\u9700\u8981\u62d6\u653e\u6765\u5b9e\u73b0\uff0c\u4e8e\u662f\u4ea7\u751f\u4ee5\u4e0b\u95ee\u9898\uff1a \u62d6\u66f3\u64cd\u4f5c\u5bf9\u89e6\u6478\u5c4f\u5e76\u4e0d\u53cb\u597d\uff0c\u5e38\u9700\u8981\u901a\u8fc7\u957f\u6309\u540e\u8fbe\u5230\u53f3\u952e\u7684\u6548\u679c\u518d\u62d6\u653e\u3002 \u51e0\u5929\u4ee5\u540e\uff0c\u4f1a\u51fa\u73b0\u6ee1\u684c\u9762\u7684\u6587\u4ef6\uff0c\u6574\u7406\u5de5\u4f5c\u91cf\u5927\u3002","title":"\u80cc\u666f"},{"location":"python/FTPFileDbClickOpen/#_2","text":"","title":"\u89e3\u51b3\u65b9\u6848\u63a2\u7d22"},{"location":"python/FTPFileDbClickOpen/#_3","text":"\u7f3a\u70b9\uff1a \u96be\u4ee5\u81ea\u5b9a\u4e49\u4e0b\u8f7d\u4f4d\u7f6e\uff0c\u4e5f\u662f\u4e00\u80a1\u8111\u653e\u5728\u4e00\u4e2a\u5730\u65b9 \u80af\u5b9a\u4f1a\u5f39\u51fa\u6d4f\u89c8\u5668\u7a97\u53e3\uff0c\u5c31\u7b97\u4e0d\u7ba1\u5f39\u51fa\u7a97\u53e3\u7684\u7f8e\u89c2\u6027\uff0c\u5982\u679c\u6d4f\u89c8\u5668\u6253\u5f00\u4e86\u4ec0\u4e48\u3002\u3002\u3002 \u7ed3\u8bba\uff1a\u653e\u5f03\u6b64\u65b9\u6848","title":"\u8bc4\u6790\u6d4f\u89c8\u5668\u4e0b\u8f7d\u63d2\u4ef6\u7684\u53ef\u884c\u6027"},{"location":"python/FTPFileDbClickOpen/#ftp_1","text":"\u4f18\u70b9\uff1a \u6709\u4e13\u95e8\u8d1f\u8d23ftp\u53cc\u51fb\u6253\u5f00\u540e\u6253\u5f00\u7a0b\u5e8f\u7684\u6ce8\u518c\u8868\u9879\uff0c\u6b64\u5904\u539f\u6765\u6ce8\u518c\u7684\u662fChrome \u7684\u786e\u53ef\u4ee5\u6ce8\u518c\uff0c\u8c03\u7528python\u65e0\u7a97\u53e3\u7a0b\u5e8f\u987a\u5229 \u4e0d\u8db3\uff1a \u4f20\u7ed9\u7a0b\u5e8f\u7684\u662f\u4e34\u65f6\u6587\u4ef6\u5730\u5740\uff0c\u4e0d\u77e5\u9053ftp\u7528\u6237 \u5fc5\u987b\u7cfb\u7edf\u4e0b\u8f7d\u597d\u4e34\u65f6\u6587\u4ef6\u624d\u4f1a\u8c03\u7528\u6ce8\u518c\u7684\u7a0b\u5e8f \u7cfb\u7edf\u5df2\u7ecf\u4e0b\u8f7d\u8fc7\u7684\u6587\u4ef6\u518d\u6b21\u53cc\u51fb\u53c8\u4f1a\u4e0b\u8f7d\u4e00\u904d\uff0c\u8d39\u65f6\u8d39\u529b \u4e34\u65f6\u6587\u4ef6\u76ee\u5f55\u4e0d\u4f1a\u81ea\u52a8\u6e05\u7a7a \u8865\u5145\uff1a \u5b58\u5728\u4e24\u4e2a\u5730\u65b9\u6ce8\u518cftp\u6d4f\u89c8\u5668\uff1a HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\Shell\\Associations\\UrlAssociations\\ftp\\UserChoice HKEY_CLASS_ROOT\\ftp \u5728\u67d0\u4e9b\u7535\u8111\u4e0a\uff08\u5982Win7 64bit\uff09\u4f7f\u7528\u65b9\u6cd5\u4e00\u6ce8\u518c\u65f6\uff0c\u4f1a\u4e0b\u8f7d\u4e34\u65f6\u6587\u4ef6\uff1b\u4f7f\u7528\u65b9\u6cd5\u4e8c\u65f6\uff0c\u53ea\u4f1a\u521b\u5efa\u4e34\u65f6\u6587\u4ef6 \u4f46\u5728\u53e6\u4e00\u4e9b\u7535\u8111\uff08\u5982Win7 32bit\uff09\uff0c\u4e0d\u8bba\u4f7f\u7528\u90a3\u79cd\u65b9\u6cd5\uff0c\u5747\u4f1a\u4e0b\u8f7d \u89e3\u6551\u65b9\u6848\uff1a \u4f7f\u7528windows api\u83b7\u53d6\u6700\u4e0a\u5c42\u6587\u4ef6\u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f \u6ce8\uff1a\u6709\u7684\uff08Win7 Professional\uff09\u5730\u5740\u680f\u4e2d\u5305\u542b\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6709\u7684\uff08Win7 Ultimate\uff09\u53ea\u6709\u7528\u6237\u540d \u518d\u542f\u7528python ftplib\u5b9e\u73b0\u6587\u4ef6\u5bf9\u6bd4\u548c\u4e0b\u8f7d","title":"\u8bc4\u6790\u5c06\u81ea\u5b9a\u4e49\u7a0b\u5e8f\u6ce8\u518c\u4e3aftp\u6253\u5f00\u65b9\u5f0f\u7684\u53ef\u884c\u6027"},{"location":"python/FTPFileDbClickOpen/#shell-extension","text":"Shell Extension\u6709\u5c5e\u6027\u680f\u3001\u60ac\u505c\u7b49\uff0c\u4f46\u4e0d\u9002\u5408","title":"\u601d\u8003Shell Extension"},{"location":"python/FTPFileDbClickOpen/#explorer","text":"\u6682\u65f6\u627e\u4e0d\u5230","title":"\u5176\u4ed6\u5e94\u7528\uff0c\u653e\u5f03Explorer"},{"location":"python/FTPFileDbClickOpen/#smb-not-ftp","text":"\u4f60\u53bb\u534f\u5546\u5440\uff01","title":"SMB, Not FTP"},{"location":"python/RequestsGlimpse/","text":"Requests\u521d\u63a2 requests \u6a21\u5757\u83b7\u53d6http\u56de\u590d\u5341\u5206\u65b9\u4fbf\uff0c\u4e00\u53e5 requests.get(url) \u5373\u53ef\u641e\u5b9a\u3002 \u4e0b\u9762\u8d34\u4e0a\u4ece mliucixin.zuopinj.com/ \u6293\u53d6\u5218\u6148\u6b23\u5c0f\u8bf4\u5168\u96c6\u7684\u4ee3\u7801\uff1a Download lcx_spider.py \u51e0\u70b9\u8bf4\u660e\uff1a \u8be5\u7f51\u7ad9url\u5341\u5206\u7b80\u5355\uff0c\u53ea\u9700\u4e00\u4e2afor\u5faa\u73af\u6539\u6539\u53d8\u6700\u540e.html\u524d\u7684\u6570\u5b57\u5373\u53ef\u6293\u53d6\u5168\u96c6\u3002 end, start = 202227+1, 201980 num = end-start for i in range(num): r = requests.get('http://mliucixin.zuopinj.com/5561/%d.html' % (start+i)) \u6293\u5230\u7684\u7f51\u9875\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a <!doctype html> <html> <head> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"> <title>\u5168\u9891\u6bb5\u963b\u585e\u5e72\u6270 \u7b2c2\u7ae0 \u201c\u4e07\u5e74\u708e\u5e1d\u201d\u53f7_\u624b\u673a\u5c0f\u8bf4\u5728\u7ebf\u9605\u8bfb_\u5218\u6148\u6b23\u4f5c\u54c1\u96c6</title> <meta name=\"keywords\" content=\"\u5168\u9891\u6bb5\u963b\u585e\u5e72\u6270,\u7b2c2\u7ae0 \u201c\u4e07\u5e74\u708e\u5e1d\u201d\u53f7\" /> <meta name=\"description\" content=\"\u5218\u6148\u6b23\u4f5c\u54c1\u96c6\u6574\u7406\u5168\u9891\u6bb5\u963b\u585e\u5e72\u6270\u5168\u96c6\u65e0\u5f39\u7a97\u624b\u673a\u5c0f\u8bf4\u5728\u7ebf\u9605\u8bfb,\u5f53\u524d\u7ae0\u8282\uff1a\u7b2c2\u7ae0 \u201c\u4e07\u5e74\u708e\u5e1d\u201d\u53f7\" /> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, target-densitydpi=medium-dpi\"> <meta name=\"apple-mobile-web-app-capable\" content=\"yes\"> <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"translucent\"> <link rel=\"apple-touch-icon\" href=\"http://zuopinj.com/images/logo_64.png\"> <link rel=\"apple-touch-icon-precomposed\" href=\"http://zuopinj.com/images/logo_64.png\"> <meta name=\"apple-mobile-web-app-title\" content=\"\u4f5c\u54c1\u96c6\"> <meta name=\"msapplication-tap-highlight\" content=\"no\"> <meta name=\"format-detection\" content=\"telphone=no, email=no\"> <meta http-equiv=\"Cache-Control\" content=\"no-transform\" /> <link rel=\"stylesheet\" type=\"text/css\" href=\"http://zuopinj.com/css/ydread.css\"/> <script src=\"http://zuopinj.com/js/wap.js\"></script> </head> <body> <div id=\"readerWarp\"> <h1 id=\"title\">\u7b2c2\u7ae0 \u201c\u4e07\u5e74\u708e\u5e1d\u201d\u53f7</h1> <div class=\"ad-mb01\"><script>ad_zpjhf_wap();</script></div> <div id=\"conWp\"> <p>\u3000\u30001\u67085\u65e5\uff0c\u8fd1\u65e5\u8f68\u9053\uff0c&ldquo;\u4e07\u5e74\u708e\u5e1d&rdquo;\u53f7<br /> <br /> \u5e84\u5b87\u611f\u5230\u4e86\u4e00\u4e2a\u4eba\u72ec\u5c45\u4e00\u5ea7\u57ce\u5e02\u7684\u5b64\u72ec\u3002<br /> <br /> &ldquo;\u4e07\u5e74\u708e\u5e1d&rdquo;\u53f7\u592a\u7a7a ...... &tp://mliucixin.zuopinj.com/5558/202095.html\" class=\"section section-next\">\u4e0b\u4e00\u7ae0</span> <script>ad_zpjhf2_wap();</script> <div class=\"chapter\" id=\"chapter\"> <span id=\"chapterPre\" data-url=\"http://mliucixin.zuopinj.com/5558/202093.html\" class=\"chapter-pre\">\u4e0a\u4e00\u7ae0</span> <a class=\"chapter-bt\" href=\"http://mliucixin.zuopinj.com/5558/\">\u76ee\u5f55</a> <span id=\"chapterNext\" data-url=\"http://mliucixin.zuopinj.com/5558/202095.html\" class=\"chapter-next\">\u4e0b\u4e00\u7ae0</span> </div> <div style=\"margin-top:1px;\"><script>ad_zpjhf3_wap();</script></div> <div id=\"tipBg\" class=\"tip-bg\"></div> <script type=\"text/javascript\"> var CONFIG = {catalog: 1,tj: \"\",pos: '[\"\",\"load\"]',basehis : '{}',error : \"\"};CONFIG.pos = JSON.parse(CONFIG.pos); </script> <script>ad_zpjxf_wap();</script> <script type=\"text/javascript\" src=\"http://zuopinj.com/js/zepto.js\"></script> <script type=\"text/javascript\" src=\"http://zuopinj.com/js/read.js\"></script> <div style=\"display: none;\"><script>waptj();</script></div> </body> </html> \u5728re.findall\u65f6\uff0c\u5982\u679chtml\u4e2d\u542b\u6709\u6362\u884c\u7b26\uff0c\u5c06\u5bfc\u81f4\u5339\u914d\u4e0d\u6210\u529f\u3002 text = r.text.replace('\\r\\n', '') \u5f53\u7136re\u662f\u5fc5\u987b\u7684 novel, chapter = findall(pattern='<meta name=\"keywords\" content=\"(.*?)\" />', string=text)[0].split(',') p = findall(pattern='<p>(.*?)</p>', string=text)[0] \u751f\u6210html\u540e\uff0c\u4f7f\u7528Calibre\u8f6c\u6362\u4e3aAZW3\u76f4\u63a5\u7528USB\u53d1\u81f3Kindle\u4e2d\uff0c\u4e8c\u7ea7\u76ee\u5f55\u624d\u6709\u6548\u3002","title":"Requests\u521d\u63a2"},{"location":"python/RequestsGlimpse/#requests","text":"requests \u6a21\u5757\u83b7\u53d6http\u56de\u590d\u5341\u5206\u65b9\u4fbf\uff0c\u4e00\u53e5 requests.get(url) \u5373\u53ef\u641e\u5b9a\u3002 \u4e0b\u9762\u8d34\u4e0a\u4ece mliucixin.zuopinj.com/ \u6293\u53d6\u5218\u6148\u6b23\u5c0f\u8bf4\u5168\u96c6\u7684\u4ee3\u7801\uff1a Download lcx_spider.py \u51e0\u70b9\u8bf4\u660e\uff1a \u8be5\u7f51\u7ad9url\u5341\u5206\u7b80\u5355\uff0c\u53ea\u9700\u4e00\u4e2afor\u5faa\u73af\u6539\u6539\u53d8\u6700\u540e.html\u524d\u7684\u6570\u5b57\u5373\u53ef\u6293\u53d6\u5168\u96c6\u3002 end, start = 202227+1, 201980 num = end-start for i in range(num): r = requests.get('http://mliucixin.zuopinj.com/5561/%d.html' % (start+i)) \u6293\u5230\u7684\u7f51\u9875\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a <!doctype html> <html> <head> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"> <title>\u5168\u9891\u6bb5\u963b\u585e\u5e72\u6270 \u7b2c2\u7ae0 \u201c\u4e07\u5e74\u708e\u5e1d\u201d\u53f7_\u624b\u673a\u5c0f\u8bf4\u5728\u7ebf\u9605\u8bfb_\u5218\u6148\u6b23\u4f5c\u54c1\u96c6</title> <meta name=\"keywords\" content=\"\u5168\u9891\u6bb5\u963b\u585e\u5e72\u6270,\u7b2c2\u7ae0 \u201c\u4e07\u5e74\u708e\u5e1d\u201d\u53f7\" /> <meta name=\"description\" content=\"\u5218\u6148\u6b23\u4f5c\u54c1\u96c6\u6574\u7406\u5168\u9891\u6bb5\u963b\u585e\u5e72\u6270\u5168\u96c6\u65e0\u5f39\u7a97\u624b\u673a\u5c0f\u8bf4\u5728\u7ebf\u9605\u8bfb,\u5f53\u524d\u7ae0\u8282\uff1a\u7b2c2\u7ae0 \u201c\u4e07\u5e74\u708e\u5e1d\u201d\u53f7\" /> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, target-densitydpi=medium-dpi\"> <meta name=\"apple-mobile-web-app-capable\" content=\"yes\"> <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"translucent\"> <link rel=\"apple-touch-icon\" href=\"http://zuopinj.com/images/logo_64.png\"> <link rel=\"apple-touch-icon-precomposed\" href=\"http://zuopinj.com/images/logo_64.png\"> <meta name=\"apple-mobile-web-app-title\" content=\"\u4f5c\u54c1\u96c6\"> <meta name=\"msapplication-tap-highlight\" content=\"no\"> <meta name=\"format-detection\" content=\"telphone=no, email=no\"> <meta http-equiv=\"Cache-Control\" content=\"no-transform\" /> <link rel=\"stylesheet\" type=\"text/css\" href=\"http://zuopinj.com/css/ydread.css\"/> <script src=\"http://zuopinj.com/js/wap.js\"></script> </head> <body> <div id=\"readerWarp\"> <h1 id=\"title\">\u7b2c2\u7ae0 \u201c\u4e07\u5e74\u708e\u5e1d\u201d\u53f7</h1> <div class=\"ad-mb01\"><script>ad_zpjhf_wap();</script></div> <div id=\"conWp\"> <p>\u3000\u30001\u67085\u65e5\uff0c\u8fd1\u65e5\u8f68\u9053\uff0c&ldquo;\u4e07\u5e74\u708e\u5e1d&rdquo;\u53f7<br /> <br /> \u5e84\u5b87\u611f\u5230\u4e86\u4e00\u4e2a\u4eba\u72ec\u5c45\u4e00\u5ea7\u57ce\u5e02\u7684\u5b64\u72ec\u3002<br /> <br /> &ldquo;\u4e07\u5e74\u708e\u5e1d&rdquo;\u53f7\u592a\u7a7a ...... &tp://mliucixin.zuopinj.com/5558/202095.html\" class=\"section section-next\">\u4e0b\u4e00\u7ae0</span> <script>ad_zpjhf2_wap();</script> <div class=\"chapter\" id=\"chapter\"> <span id=\"chapterPre\" data-url=\"http://mliucixin.zuopinj.com/5558/202093.html\" class=\"chapter-pre\">\u4e0a\u4e00\u7ae0</span> <a class=\"chapter-bt\" href=\"http://mliucixin.zuopinj.com/5558/\">\u76ee\u5f55</a> <span id=\"chapterNext\" data-url=\"http://mliucixin.zuopinj.com/5558/202095.html\" class=\"chapter-next\">\u4e0b\u4e00\u7ae0</span> </div> <div style=\"margin-top:1px;\"><script>ad_zpjhf3_wap();</script></div> <div id=\"tipBg\" class=\"tip-bg\"></div> <script type=\"text/javascript\"> var CONFIG = {catalog: 1,tj: \"\",pos: '[\"\",\"load\"]',basehis : '{}',error : \"\"};CONFIG.pos = JSON.parse(CONFIG.pos); </script> <script>ad_zpjxf_wap();</script> <script type=\"text/javascript\" src=\"http://zuopinj.com/js/zepto.js\"></script> <script type=\"text/javascript\" src=\"http://zuopinj.com/js/read.js\"></script> <div style=\"display: none;\"><script>waptj();</script></div> </body> </html> \u5728re.findall\u65f6\uff0c\u5982\u679chtml\u4e2d\u542b\u6709\u6362\u884c\u7b26\uff0c\u5c06\u5bfc\u81f4\u5339\u914d\u4e0d\u6210\u529f\u3002 text = r.text.replace('\\r\\n', '') \u5f53\u7136re\u662f\u5fc5\u987b\u7684 novel, chapter = findall(pattern='<meta name=\"keywords\" content=\"(.*?)\" />', string=text)[0].split(',') p = findall(pattern='<p>(.*?)</p>', string=text)[0] \u751f\u6210html\u540e\uff0c\u4f7f\u7528Calibre\u8f6c\u6362\u4e3aAZW3\u76f4\u63a5\u7528USB\u53d1\u81f3Kindle\u4e2d\uff0c\u4e8c\u7ea7\u76ee\u5f55\u624d\u6709\u6548\u3002","title":"Requests\u521d\u63a2"},{"location":"python/TermuxWithBrowser/","text":"\u8ba9Termux\u5bf9\u6d4f\u89c8\u5668\u66f4\u53cb\u597d Download xb.py \u96be\u70b9\uff1a \u83b7\u53d6jupyter\u7b49\u5e94\u7528\u7684\u5b9e\u65f6\u8f93\u51fa import subprocess backup = subprocess.Popen( cmd.split(), shell=False, stdout=subprocess.PIPE, stderr=subprocess.STDOUT) for line in iter(backup.stdout.readline, b''): line = line.rstrip().decode('utf8') \u4f7fCtrl+C\u80fd\u4f7f\u8ba9\u5e94\u7528\u7ed3\u675f \u53ea\u6709\u4ee5 shell=False \u542f\u52a8\u7684 Popen \u624d\u80fd\u6536\u5230\u4e2d\u6b62\u4fe1\u53f7\uff0c\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u3002 try: do_something() except KeyboardInterrupt: from os import _exit print('Quiting') backup.kill() _exit(0) \u80fd\u81ea\u52a8\u8bc6\u522b\u4f7f\u7528\u4ec0\u4e48\u5e94\u7528 # \u57fa\u4e8e\u6587\u4ef6\u6570\u91cf\u591a\u5c11\u7684\u5206\u7c7b def guess_app(): from os import listdir, getcwd, chdir from os.path import splitext app_trait = {'.ipynb': 'j', '.md': 'd'} # Support launch mkdocs even deep inside the directory chdir(getcwd().split('docs')[0]) if 'mkdocs.yml' in listdir(): return 'k' exts = {} # Convert to only extentions all_file = list(map(lambda x: splitext(x)[1], listdir())) for k in app_trait: exts[k] = all_file.count(k) # Get the most frequent one most = sorted([(k, v)for k, v in exts.items()], key=lambda x: x[1], reverse=True)[0][0] return app_trait[most] # \u53c2\u8003\u4e86grip\u8bed\u6cd5\u540e\uff0c\u4e5f\u8bb8\u66f4\u5408\u9002\u7684\u5206\u7c7b def guess_app(): from os import listdir, getcwd, chdir from os.path import splitext app_trait = {'.ipynb': 'j', '.md': 'd'} # Support launch mkdocs even deep inside the directory if 'mkdocs.yml' in listdir(): return 'k' pwd = getcwd() if 'docs' in pwd: chdir(pwd.split('docs')[0]) if 'mkdocs.yml' in listdir(): return 'k' chdir(pwd) if len(argv) > 1 and argv[1].endswith('.md') or 'README.md' in listdir(): return 'd' exts = {} # Convert to only extentions all_file = set(map(lambda x: splitext(x)[1], listdir())) if '.ipynb' in all_file: return 'j' raise NotImplementedError('No application found to implement this.') \u6709\u65f6\u5019\u5e94\u7528\u4e0d\u6b62\u4e00\u6b21\u5730\u8f93\u51fa\u5e94\u6253\u5f00\u7684\u5730\u5740\uff0c\u8fd9\u65f6\u8981\u7acb\u4e00\u4e2aflag def start_app(cmd): XB_STATUS = False ...... r = findall('http://.*/', line) or findall('http://.*$', line) if len(r) > 0 and not XB_STATUS: print(r[0]) popen('termux-open-url \"%s\"' % r[0]) XB_STATUS = True","title":"\u8ba9Termux\u5bf9\u6d4f\u89c8\u5668\u66f4\u53cb\u597d"},{"location":"python/TermuxWithBrowser/#termux","text":"Download xb.py \u96be\u70b9\uff1a \u83b7\u53d6jupyter\u7b49\u5e94\u7528\u7684\u5b9e\u65f6\u8f93\u51fa import subprocess backup = subprocess.Popen( cmd.split(), shell=False, stdout=subprocess.PIPE, stderr=subprocess.STDOUT) for line in iter(backup.stdout.readline, b''): line = line.rstrip().decode('utf8') \u4f7fCtrl+C\u80fd\u4f7f\u8ba9\u5e94\u7528\u7ed3\u675f \u53ea\u6709\u4ee5 shell=False \u542f\u52a8\u7684 Popen \u624d\u80fd\u6536\u5230\u4e2d\u6b62\u4fe1\u53f7\uff0c\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u3002 try: do_something() except KeyboardInterrupt: from os import _exit print('Quiting') backup.kill() _exit(0) \u80fd\u81ea\u52a8\u8bc6\u522b\u4f7f\u7528\u4ec0\u4e48\u5e94\u7528 # \u57fa\u4e8e\u6587\u4ef6\u6570\u91cf\u591a\u5c11\u7684\u5206\u7c7b def guess_app(): from os import listdir, getcwd, chdir from os.path import splitext app_trait = {'.ipynb': 'j', '.md': 'd'} # Support launch mkdocs even deep inside the directory chdir(getcwd().split('docs')[0]) if 'mkdocs.yml' in listdir(): return 'k' exts = {} # Convert to only extentions all_file = list(map(lambda x: splitext(x)[1], listdir())) for k in app_trait: exts[k] = all_file.count(k) # Get the most frequent one most = sorted([(k, v)for k, v in exts.items()], key=lambda x: x[1], reverse=True)[0][0] return app_trait[most] # \u53c2\u8003\u4e86grip\u8bed\u6cd5\u540e\uff0c\u4e5f\u8bb8\u66f4\u5408\u9002\u7684\u5206\u7c7b def guess_app(): from os import listdir, getcwd, chdir from os.path import splitext app_trait = {'.ipynb': 'j', '.md': 'd'} # Support launch mkdocs even deep inside the directory if 'mkdocs.yml' in listdir(): return 'k' pwd = getcwd() if 'docs' in pwd: chdir(pwd.split('docs')[0]) if 'mkdocs.yml' in listdir(): return 'k' chdir(pwd) if len(argv) > 1 and argv[1].endswith('.md') or 'README.md' in listdir(): return 'd' exts = {} # Convert to only extentions all_file = set(map(lambda x: splitext(x)[1], listdir())) if '.ipynb' in all_file: return 'j' raise NotImplementedError('No application found to implement this.') \u6709\u65f6\u5019\u5e94\u7528\u4e0d\u6b62\u4e00\u6b21\u5730\u8f93\u51fa\u5e94\u6253\u5f00\u7684\u5730\u5740\uff0c\u8fd9\u65f6\u8981\u7acb\u4e00\u4e2aflag def start_app(cmd): XB_STATUS = False ...... r = findall('http://.*/', line) or findall('http://.*$', line) if len(r) > 0 and not XB_STATUS: print(r[0]) popen('termux-open-url \"%s\"' % r[0]) XB_STATUS = True","title":"\u8ba9Termux\u5bf9\u6d4f\u89c8\u5668\u66f4\u53cb\u597d"},{"location":"python/packages/","text":"Package Notes QtDisigner Install QtDisigner is convenient, but it doesn't come along with the none GPL version. Then it is for you. pip install pyqt5_tools Previewing Markdown grip is an excellent Flask app and python module to view markdown and easy to use. Just run: pip install grip Note that grip need Internet access because it depends on github markdown api to render. Pip dependency tree view pip offers a freeze command to view installed packages, but not so good to see the dependencies. pipdeptree \" to see the whole tree pipdeptree -p pack \" to see the tree of pack pipdeptree -r -p pack \" to see packages which are dependent on pack Images to PDF package img2pdf offers a lossless and fast conversion from images to pdf file which depends on Pillow","title":"Package Notes"},{"location":"python/packages/#package-notes","text":"","title":"Package Notes"},{"location":"python/packages/#qtdisigner-install","text":"QtDisigner is convenient, but it doesn't come along with the none GPL version. Then it is for you. pip install pyqt5_tools","title":"QtDisigner Install"},{"location":"python/packages/#previewing-markdown","text":"grip is an excellent Flask app and python module to view markdown and easy to use. Just run: pip install grip Note that grip need Internet access because it depends on github markdown api to render.","title":"Previewing Markdown"},{"location":"python/packages/#pip-dependency-tree-view","text":"pip offers a freeze command to view installed packages, but not so good to see the dependencies. pipdeptree \" to see the whole tree pipdeptree -p pack \" to see the tree of pack pipdeptree -r -p pack \" to see packages which are dependent on pack","title":"Pip dependency tree view"},{"location":"python/packages/#images-to-pdf","text":"package img2pdf offers a lossless and fast conversion from images to pdf file which depends on Pillow","title":"Images to PDF"},{"location":"python/pip/","text":"Pip&Pypi Downloading Binary Package on Windows From StackOverflow As the other responses pointed out, one solution is to install Visual Studio 2015. However, it takes a few GBs of disk space. One way around is to install precompiled binaries. The webpage http://www.lfd.uci.edu/~gohlke/pythonlibs contains precompiled binaries for many Python packages. The pip command I actually want alias pup=\"pip install --upgrade --no-cache -i https://pypi.tuna.tsinghua.edu.cn/simple/\" To install locally pip install --no-index --find-links=dest/ -r requirements.txt To download using download command pip download --dest \"Pypis\" -r requirements.txt Downloading specific python version and platform (Windows batch version) pip download ^ --only-binary=:all:^ --platform win32^ --python-version 36^ --implementation cp^ --dest \"Pypis\"^ -i https://pypi.tuna.tsinghua.edu.cn/simple/^ -r requirements.txt Using TUNA Mirror by Default On Linux Write below in ~/.pip/pip.conf [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple [install] trusted-host=mirrors.aliyun.com On Windows Write above in ~/pip/pip.ini","title":"Pip&Pypi"},{"location":"python/pip/#pippypi","text":"","title":"Pip&amp;Pypi"},{"location":"python/pip/#downloading-binary-package-on-windows","text":"From StackOverflow As the other responses pointed out, one solution is to install Visual Studio 2015. However, it takes a few GBs of disk space. One way around is to install precompiled binaries. The webpage http://www.lfd.uci.edu/~gohlke/pythonlibs contains precompiled binaries for many Python packages.","title":"Downloading Binary Package on Windows"},{"location":"python/pip/#the-pip-command-i-actually-want","text":"alias pup=\"pip install --upgrade --no-cache -i https://pypi.tuna.tsinghua.edu.cn/simple/\"","title":"The pip command I actually want"},{"location":"python/pip/#to-install-locally","text":"pip install --no-index --find-links=dest/ -r requirements.txt","title":"To install locally"},{"location":"python/pip/#to-download-using-download-command","text":"pip download --dest \"Pypis\" -r requirements.txt","title":"To download using download command"},{"location":"python/pip/#downloading-specific-python-version-and-platform-windows-batch-version","text":"pip download ^ --only-binary=:all:^ --platform win32^ --python-version 36^ --implementation cp^ --dest \"Pypis\"^ -i https://pypi.tuna.tsinghua.edu.cn/simple/^ -r requirements.txt","title":"Downloading specific python version and platform (Windows batch version)"},{"location":"python/pip/#using-tuna-mirror-by-default","text":"","title":"Using TUNA Mirror by Default"},{"location":"python/pip/#on-linux","text":"Write below in ~/.pip/pip.conf [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple [install] trusted-host=mirrors.aliyun.com","title":"On Linux"},{"location":"python/pip/#on-windows","text":"Write above in ~/pip/pip.ini","title":"On Windows"},{"location":"python/python/","text":"Python the Language Notes for python language itself. Interesting Things About Class Let's have a look at the following code first: class A: def printf(*args): print(args) def printff(*args): print(args) a=A() a.printf() print ('-'*5,a.printf) A.printf=printff a.printf() print ('-'*5,a.printf) A.printf=print a.printf() print ('-'*5,a.printf) a.printf=printff a.printf() print ('-'*5,a.printf) A.printf=printff a.printf() print ('-'*5,a.printf) print ('-'*5,A.printf) ##Output ##(<__main__.A object at 0x01371070>,) ##----- <bound method A.printf of <__main__.A object at 0x01371070>> ##(<__main__.A object at 0x01371070>,) ##----- <bound method A.printff of <__main__.A object at 0x01371070>> ## ##----- <built-in function print> ##() ##----- <function printff at 0x01795858> ##() ##----- <function printff at 0x01795858> ##----- <function printff at 0x01795858> And from this kind of behavior, I think I leart : The method defined in the class is called bound method . The function specificly assigned to the class later will become its bound method too. And magically , the name will change to the function's name. What's more, when I call a.printff ,it throw an error. The python interpreter treated built-in functions diffrently. Thus function print wound not become a bound method . After the function is assign to the instance, it would not become a bound method , but rather simply a function. ~~After a function is assign to the instance, the corresponding bound method in the class would magically change.~~ After a function is assign to the instance, the behavoir when assigning functions again to an class would magically change. (Though I really don't know some of them ,I think I'd better put them down) Python Exceptions I encountered this problem when writing nb.py . I wrote except Exception: instead of except KeyboardInterrupt: ,and it did not catch the KeyboardInterrupt as I expected. But now I figured out that KeyboardInterrupt is not included in Exception: BaseException +-- SystemExit +-- KeyboardInterrupt +-- GeneratorExit +-- Exception +-- ... +-- ... Slicing Here is a valid slice s='jksahgijsdhgedhjgkh' print(s[5:999]) ##Output ##gijsdhgedhjgkh a valid way to create a slice a=slice(1,5,2) print(a.start) print(a.stop,a.step) ##Output ##1 ##5 2 the invalid way a=[1:3:4] ##Output ##SyntaxError cooperate with class class A: def __getitem__(self,arg): print(arg) return a=A() b=a[123,...,1:3:5,[1,2,3]] ##Output ##(123, Ellipsis, slice(1, 3, 5), [1, 2, 3]) iter take callable argument def seek_next_line(f): for c in iter(lambda: f.read(1),'\\n'): pass The iter(callable, until_value) function repeatedly calls callable and yields its result until until_value is returned. method __missing__ From 2.5 onwards dicts have a special method __missing__ that is invoked for missing items: >>> class MyDict(dict): ... def __missing__(self, key): ... self[key] = rv = [] ... return rv ... >>> m = MyDict() >>> m[\"foo\"].append(1) >>> m[\"foo\"].append(2) >>> dict(m) {'foo': [1, 2]} There is also a dict subclass in collections called defaultdict that does pretty much the same but calls a function without arguments for not existing items: >>> from collections import defaultdict >>> m = defaultdict(list) >>> m[\"foo\"].append(1) >>> m[\"foo\"].append(2) >>> dict(m) {'foo': [1, 2]} I recommend converting such dicts to regular dicts before passing them to functions that don't expect such subclasses. A lot of code uses d[a_key] and catches KeyErrors to check if an item exists which would add a new item to the dict. The .pth file To add more python modules (espcially 3rd party ones), most people seem to use PYTHONPATH environment variables or they add symlinks or directories in their site-packages directories. Another way, is to use *.pth files. Here's the official python doc's explanation: The most convenient way [to modify python's search path] is to add a path configuration file to a directory that's already on Python's path, usually to the .../site-packages/ directory. Path configuration files have an extension of .pth, and each line must contain a single path that will be appended to sys.path. (Because the new paths are appended to sys.path, modules in the added directories will not override standard modules. This means you can't use this mechanism for installing fixed versions of standard modules.) Hidden features of Python What are the lesser-known but useful features of the Python programming language? Discussion at https://stackoverflow.com/questions/101268/hidden-features-of-python","title":"Python the Language"},{"location":"python/python/#python-the-language","text":"Notes for python language itself.","title":"Python the Language"},{"location":"python/python/#interesting-things-about-class","text":"Let's have a look at the following code first: class A: def printf(*args): print(args) def printff(*args): print(args) a=A() a.printf() print ('-'*5,a.printf) A.printf=printff a.printf() print ('-'*5,a.printf) A.printf=print a.printf() print ('-'*5,a.printf) a.printf=printff a.printf() print ('-'*5,a.printf) A.printf=printff a.printf() print ('-'*5,a.printf) print ('-'*5,A.printf) ##Output ##(<__main__.A object at 0x01371070>,) ##----- <bound method A.printf of <__main__.A object at 0x01371070>> ##(<__main__.A object at 0x01371070>,) ##----- <bound method A.printff of <__main__.A object at 0x01371070>> ## ##----- <built-in function print> ##() ##----- <function printff at 0x01795858> ##() ##----- <function printff at 0x01795858> ##----- <function printff at 0x01795858> And from this kind of behavior, I think I leart : The method defined in the class is called bound method . The function specificly assigned to the class later will become its bound method too. And magically , the name will change to the function's name. What's more, when I call a.printff ,it throw an error. The python interpreter treated built-in functions diffrently. Thus function print wound not become a bound method . After the function is assign to the instance, it would not become a bound method , but rather simply a function. ~~After a function is assign to the instance, the corresponding bound method in the class would magically change.~~ After a function is assign to the instance, the behavoir when assigning functions again to an class would magically change. (Though I really don't know some of them ,I think I'd better put them down)","title":"Interesting Things About Class"},{"location":"python/python/#python-exceptions","text":"I encountered this problem when writing nb.py . I wrote except Exception: instead of except KeyboardInterrupt: ,and it did not catch the KeyboardInterrupt as I expected. But now I figured out that KeyboardInterrupt is not included in Exception: BaseException +-- SystemExit +-- KeyboardInterrupt +-- GeneratorExit +-- Exception +-- ... +-- ...","title":"Python Exceptions"},{"location":"python/python/#slicing","text":"","title":"Slicing"},{"location":"python/python/#here-is-a-valid-slice","text":"s='jksahgijsdhgedhjgkh' print(s[5:999]) ##Output ##gijsdhgedhjgkh","title":"Here is a valid slice"},{"location":"python/python/#a-valid-way-to-create-a-slice","text":"a=slice(1,5,2) print(a.start) print(a.stop,a.step) ##Output ##1 ##5 2","title":"a valid way to create a slice"},{"location":"python/python/#the-invalid-way","text":"a=[1:3:4] ##Output ##SyntaxError","title":"the invalid way"},{"location":"python/python/#cooperate-with-class","text":"class A: def __getitem__(self,arg): print(arg) return a=A() b=a[123,...,1:3:5,[1,2,3]] ##Output ##(123, Ellipsis, slice(1, 3, 5), [1, 2, 3])","title":"cooperate with class"},{"location":"python/python/#iter-take-callable-argument","text":"def seek_next_line(f): for c in iter(lambda: f.read(1),'\\n'): pass The iter(callable, until_value) function repeatedly calls callable and yields its result until until_value is returned.","title":"iter take callable argument"},{"location":"python/python/#method-__missing__","text":"From 2.5 onwards dicts have a special method __missing__ that is invoked for missing items: >>> class MyDict(dict): ... def __missing__(self, key): ... self[key] = rv = [] ... return rv ... >>> m = MyDict() >>> m[\"foo\"].append(1) >>> m[\"foo\"].append(2) >>> dict(m) {'foo': [1, 2]} There is also a dict subclass in collections called defaultdict that does pretty much the same but calls a function without arguments for not existing items: >>> from collections import defaultdict >>> m = defaultdict(list) >>> m[\"foo\"].append(1) >>> m[\"foo\"].append(2) >>> dict(m) {'foo': [1, 2]} I recommend converting such dicts to regular dicts before passing them to functions that don't expect such subclasses. A lot of code uses d[a_key] and catches KeyErrors to check if an item exists which would add a new item to the dict.","title":"method __missing__"},{"location":"python/python/#the-pth-file","text":"To add more python modules (espcially 3rd party ones), most people seem to use PYTHONPATH environment variables or they add symlinks or directories in their site-packages directories. Another way, is to use *.pth files. Here's the official python doc's explanation: The most convenient way [to modify python's search path] is to add a path configuration file to a directory that's already on Python's path, usually to the .../site-packages/ directory. Path configuration files have an extension of .pth, and each line must contain a single path that will be appended to sys.path. (Because the new paths are appended to sys.path, modules in the added directories will not override standard modules. This means you can't use this mechanism for installing fixed versions of standard modules.)","title":"The .pth file"},{"location":"python/python/#hidden-features-of-python","text":"What are the lesser-known but useful features of the Python programming language? Discussion at https://stackoverflow.com/questions/101268/hidden-features-of-python","title":"Hidden features of Python"},{"location":"python/readchr/","text":"Read the Character Straight On Linux import os import sys import tty, termios fd = sys.stdin.fileno() old_settings = termios.tcgetattr(fd) try : tty.setraw( fd ) ch = sys.stdin.read( 1 ) finally : termios.tcsetattr(fd, termios.TCSADRAIN, old_settings) On Windows import msvcrt ch = msvcrt.getch()","title":"Read the Character Straight"},{"location":"python/readchr/#read-the-character-straight","text":"","title":"Read the Character Straight"},{"location":"python/readchr/#on-linux","text":"import os import sys import tty, termios fd = sys.stdin.fileno() old_settings = termios.tcgetattr(fd) try : tty.setraw( fd ) ch = sys.stdin.read( 1 ) finally : termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)","title":"On Linux"},{"location":"python/readchr/#on-windows","text":"import msvcrt ch = msvcrt.getch()","title":"On Windows"},{"location":"python/readline/","text":"Module readline Here is my simple script on readline. import readline import os def completer(text,state): ds=os.listdir() rs=list(filter(lambda s:s.startswith(text),ds)) if state<len(rs): return rs[state] return None readline.parse_and_bind(\"tab: complete\") readline.set_completer(completer) input() \u5fc5\u987b\u6ce8\u610f\u5982\u679c\u5728\u51fd\u6570\u4e2d\u6709\u9519\u8bef\u7684\u8bdd\uff0c\u5728\u4f60\u6309\u4e0btab\u952e\u540e\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u53d1\u751f\uff08\u65b0\u624b\u4f1a\u5728\u8fd9\u91cc\u5361\u58f3\uff09\u3002\u8981\u77e5\u9053\uff0c readline \u975e\u5e38\u9ad8\u7ea7\u5730\u5c01\u88c5\u4e86\u4f60\u7684\u51fd\u6570\uff0c\u8fd9\u6837\u624d\u80fd\u5728 input \u4e2d\u8865\u5168\u3002\u4f46\u8fd9\u5bf9debug\u6765\u8bf4\u4e0d\u89c1\u5f97\u662f\u4e00\u4ef6\u597d\u4e8b\u3002\u8f83\u597d\u7684\u65b9\u6cd5\u662f\u5148\u8c03\u7528\u4e00\u4e0b\u4f60\u7684\u51fd\u6570 completer('c',0) \u5e76\u68c0\u67e5\u8f93\u51fa\uff0c\u8fd9\u6837\u51fd\u6570\u4e2d\u7684Exception\u4f1a\u6b63\u5e38raise\u3002 \u5f62\u8c61\u7406\u89e3\u7684\u8bdd\uff0c state \u5176\u5b9e\u5c31\u662f\u7b2c\u51e0\u9009\u9879\u7684\u5e8f\u53f7\u3002 Expecially notice that if there's any exception raised in your script, nothing would happen when you pressed .The best way I thought of is to call completer('c',0) first and check the return value when debugging. As for the parameter state , it's just a index of the options.","title":"Module readline"},{"location":"python/readline/#module-readline","text":"Here is my simple script on readline. import readline import os def completer(text,state): ds=os.listdir() rs=list(filter(lambda s:s.startswith(text),ds)) if state<len(rs): return rs[state] return None readline.parse_and_bind(\"tab: complete\") readline.set_completer(completer) input() \u5fc5\u987b\u6ce8\u610f\u5982\u679c\u5728\u51fd\u6570\u4e2d\u6709\u9519\u8bef\u7684\u8bdd\uff0c\u5728\u4f60\u6309\u4e0btab\u952e\u540e\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u53d1\u751f\uff08\u65b0\u624b\u4f1a\u5728\u8fd9\u91cc\u5361\u58f3\uff09\u3002\u8981\u77e5\u9053\uff0c readline \u975e\u5e38\u9ad8\u7ea7\u5730\u5c01\u88c5\u4e86\u4f60\u7684\u51fd\u6570\uff0c\u8fd9\u6837\u624d\u80fd\u5728 input \u4e2d\u8865\u5168\u3002\u4f46\u8fd9\u5bf9debug\u6765\u8bf4\u4e0d\u89c1\u5f97\u662f\u4e00\u4ef6\u597d\u4e8b\u3002\u8f83\u597d\u7684\u65b9\u6cd5\u662f\u5148\u8c03\u7528\u4e00\u4e0b\u4f60\u7684\u51fd\u6570 completer('c',0) \u5e76\u68c0\u67e5\u8f93\u51fa\uff0c\u8fd9\u6837\u51fd\u6570\u4e2d\u7684Exception\u4f1a\u6b63\u5e38raise\u3002 \u5f62\u8c61\u7406\u89e3\u7684\u8bdd\uff0c state \u5176\u5b9e\u5c31\u662f\u7b2c\u51e0\u9009\u9879\u7684\u5e8f\u53f7\u3002 Expecially notice that if there's any exception raised in your script, nothing would happen when you pressed .The best way I thought of is to call completer('c',0) first and check the return value when debugging. As for the parameter state , it's just a index of the options.","title":"Module readline"},{"location":"termux/errors/","text":"Error Handling Table of Contents ImportError dlopen failed ImportError dlopen failed I haven't clearly figure out what's happening, but uninstall and reinstall the packege absolutely helps.","title":"Error Handling"},{"location":"termux/errors/#error-handling","text":"","title":"Error Handling"},{"location":"termux/errors/#table-of-contents","text":"ImportError dlopen failed","title":"Table of Contents"},{"location":"termux/errors/#importerror-dlopen-failed","text":"I haven't clearly figure out what's happening, but uninstall and reinstall the packege absolutely helps.","title":"ImportError dlopen failed"},{"location":"termux/init/","text":"Initialize Initial Setup First,run: termux-setup-storage ln -s ~/storage/shared/123/pythonPro Then, in directory pythonPro ,run sh setup.sh . And the content of setup.sh is as followed: apt install clang python python-dev fftw libzmq libzmq-dev freetype freetype-dev libpng libpng-dev pkg-config curl vim-python zsh curl -L https://its-pointless.github.io/setup-pointless-repo.sh | sh pkg install numpy pip install matplotlib pip install jupyter sh -c \"$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)\" ln -s /data/data/com.termux/files/usr/lib/python3.6/site-packages ln -s ~/storage/shared/qpython ln -s ~/storage/shared/123/cppPro cp ~/pythonPro/jupyter_notebook_config.py ~/.jupyter/","title":"Initialize"},{"location":"termux/init/#initialize","text":"","title":"Initialize"},{"location":"termux/init/#initial-setup","text":"First,run: termux-setup-storage ln -s ~/storage/shared/123/pythonPro Then, in directory pythonPro ,run sh setup.sh . And the content of setup.sh is as followed: apt install clang python python-dev fftw libzmq libzmq-dev freetype freetype-dev libpng libpng-dev pkg-config curl vim-python zsh curl -L https://its-pointless.github.io/setup-pointless-repo.sh | sh pkg install numpy pip install matplotlib pip install jupyter sh -c \"$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)\" ln -s /data/data/com.termux/files/usr/lib/python3.6/site-packages ln -s ~/storage/shared/qpython ln -s ~/storage/shared/123/cppPro cp ~/pythonPro/jupyter_notebook_config.py ~/.jupyter/","title":"Initial Setup"},{"location":"vim/Airline/","text":"Airline Setup vim airline is a tool to enhance the looking of vim. And it is a little tricky to setup especially in termux. As I did not install any package manager for vim (in fact, I failed to install and setup Vundle), I need to clone the repo to ~/.vim/pack/dist/start/ to let vim automatically load the package. And I see the airline when I opened vim. By the way, all packages I tested (NERDTree, indentLine, gitgutter) all support this kind of operation. Trouble Shooting Only mode and filename is displayed! For termux disable the auto truncate of section A,B,C and Z is perfect. That is, let other sections truncate at a larger width than your screen. let g:airline#extensions#default#section_truncate_width = { \\ 'warning': 80, \\ 'error': 80, \\ 'x': 80, \\ 'y': 80} Note: Only when nocompatible set can you use \\ to continue line. No fancy > s there! Enable fancy fonts! let g:airline_powerline_fonts = 1 There are dots following the mode! Set the name of the modes! let g:airline_mode_map = { \\ 'c': 'C', \\ 'n': 'N', \\ 'V': 'V', \\ 'i':'I'} I do not need the section Z so long! Set the custom section z! let g:airline_section_z = '%2l/%L\u2630%2v' What if I need a tab bar? Enable it and set the good style! let g:airline#extensions#tabline#enabled=1 let g:airline#extensions#tabline#formatter = 'unique_tail' The word count is annoying! Disable it! let g:airline#extensions#wordcount#enabled = 0 Fancy style? Yes Badwolf! let g:airline_theme = 'badwolf' Do not want extra > s? Disable it! let g:airline_skip_empty_sections = 1","title":"Airline Setup"},{"location":"vim/Airline/#airline-setup","text":"vim airline is a tool to enhance the looking of vim. And it is a little tricky to setup especially in termux. As I did not install any package manager for vim (in fact, I failed to install and setup Vundle), I need to clone the repo to ~/.vim/pack/dist/start/ to let vim automatically load the package. And I see the airline when I opened vim. By the way, all packages I tested (NERDTree, indentLine, gitgutter) all support this kind of operation.","title":"Airline Setup"},{"location":"vim/Airline/#trouble-shooting","text":"","title":"Trouble Shooting"},{"location":"vim/Airline/#only-mode-and-filename-is-displayed","text":"For termux disable the auto truncate of section A,B,C and Z is perfect. That is, let other sections truncate at a larger width than your screen. let g:airline#extensions#default#section_truncate_width = { \\ 'warning': 80, \\ 'error': 80, \\ 'x': 80, \\ 'y': 80} Note: Only when nocompatible set can you use \\ to continue line.","title":"Only mode and filename is displayed!"},{"location":"vim/Airline/#no-fancy-gt-s-there","text":"Enable fancy fonts! let g:airline_powerline_fonts = 1","title":"No fancy &gt; s there!"},{"location":"vim/Airline/#there-are-dots-following-the-mode","text":"Set the name of the modes! let g:airline_mode_map = { \\ 'c': 'C', \\ 'n': 'N', \\ 'V': 'V', \\ 'i':'I'}","title":"There are dots following the mode!"},{"location":"vim/Airline/#i-do-not-need-the-section-z-so-long","text":"Set the custom section z! let g:airline_section_z = '%2l/%L\u2630%2v'","title":"I do not need the section Z so long!"},{"location":"vim/Airline/#what-if-i-need-a-tab-bar","text":"Enable it and set the good style! let g:airline#extensions#tabline#enabled=1 let g:airline#extensions#tabline#formatter = 'unique_tail'","title":"What if I need a tab bar?"},{"location":"vim/Airline/#the-word-count-is-annoying","text":"Disable it! let g:airline#extensions#wordcount#enabled = 0","title":"The word count is annoying!"},{"location":"vim/Airline/#fancy-style","text":"Yes Badwolf! let g:airline_theme = 'badwolf'","title":"Fancy style?"},{"location":"vim/Airline/#do-not-want-extra-gt-s","text":"Disable it! let g:airline_skip_empty_sections = 1","title":"Do not want extra &gt; s?"},{"location":"vim/TabSetting/","text":"Annoying Tab width When using vim on termux , only in python file did vim use 4-space-width tab. And in other files(e.g. .html ), a tab, a >> and a backspace are all 8 spaces. And I tried to set the following in ~/.vimrc file. But it does not work. set autoindent set smartindent set tabstop=4 \" \u7edf\u4e00\u7f29\u8fdb\u4e3a4 set shiftwidth=4 \"\u81ea\u52a8\u7f29\u8fdb\u957f\u5ea6 set expandtab \" Tab\u8f6c\u7a7a\u683c set softtabstop=4 After Googling for a while, I found that it is said that there are some file specific settings which affects the setting in ~/.vimrc file. Discussion on StackOverflow: https://stackoverflow.com/questions/14173766/vim-ignores-shiftwidth-specified-in-vimrc And the struct of vim plugin: http://learnvimscriptthehardway.stevelosh.com/chapters/42.html#vimplugin Then, I tried to write the config above to ~/.vim/after/settab.vim . And problem is still there. Another saied use :verbose set tabstop? to see where did the variable last set. And it showed it was in ~/.vim/view/xxxxx . That is because I run autocmd to save and load view. Then I deleted all files under it(the config still in ~/.vimrc ). And I made mkview explicit by comment out the autocmd. Problem solved!","title":"Annoying Tab width"},{"location":"vim/TabSetting/#annoying-tab-width","text":"When using vim on termux , only in python file did vim use 4-space-width tab. And in other files(e.g. .html ), a tab, a >> and a backspace are all 8 spaces. And I tried to set the following in ~/.vimrc file. But it does not work. set autoindent set smartindent set tabstop=4 \" \u7edf\u4e00\u7f29\u8fdb\u4e3a4 set shiftwidth=4 \"\u81ea\u52a8\u7f29\u8fdb\u957f\u5ea6 set expandtab \" Tab\u8f6c\u7a7a\u683c set softtabstop=4 After Googling for a while, I found that it is said that there are some file specific settings which affects the setting in ~/.vimrc file. Discussion on StackOverflow: https://stackoverflow.com/questions/14173766/vim-ignores-shiftwidth-specified-in-vimrc And the struct of vim plugin: http://learnvimscriptthehardway.stevelosh.com/chapters/42.html#vimplugin Then, I tried to write the config above to ~/.vim/after/settab.vim . And problem is still there. Another saied use :verbose set tabstop? to see where did the variable last set. And it showed it was in ~/.vim/view/xxxxx . That is because I run autocmd to save and load view. Then I deleted all files under it(the config still in ~/.vimrc ). And I made mkview explicit by comment out the autocmd. Problem solved!","title":"Annoying Tab width"}]}